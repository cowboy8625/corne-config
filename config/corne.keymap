/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#define NUMBERS 2
#define SYMBOLS 2

/ {
	chosen {
		zmk,matrix-transform = &five_column_transform;
	};
	combos {
		compatible = "zmk,combos";
		combo_backspace {
		    timeout-ms = <50>;
		    key-positions = <11 12>; // S and D
		    bindings = <&kp BSPC>;
		};
		combo_ecs {
		    timeout-ms = <50>;
		    key-positions = <1 2>;  // W and E
		    bindings = <&kp ESC>;
		};
	};
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
// -----------------------------------------------------------------------------------------
// |    0    |    1    |    2    |    3    |    4    |   |    5    |    6     |    7    |    8    |    9    |
// |    Q    |    W    |    E    |    R    |    T    |   |    Y    |    U     |    I    |    O    |    P    |
      &kp Q     &kp W     &kp E     &kp R     &kp T         &kp Y     &kp U      &kp I     &kp O     &kp P

// |   10    |   11    |   12    |   13    |   14    |   |   15    |   16     |   17    |   18    |   19    |
// |    A    |    S    |    D    |    F    |    G    |   |    H    |    J     |    K    |    L    |    ;    |
   &mt LCTRL A  &kp S     &kp D     &kp F     &kp G         &kp H     &kp J      &kp K     &kp L    &kp SEMI

// |   20    |   21    |   22    |   22    |   23    |   |   24    |   25     |   26    |   27    |   28    |
// |    Z    |    X    |    C    |    V    |    B    |   |    N    |    M     |    ,    |    .    |    /    |
      &kp Z     &kp X     &kp C     &kp V     &kp B         &kp N     &kp M    &kp COMMA  &kp DOT  &kp FSLH

//             |    29   |    30   |       31        |   |        32       |    33    |    34   |
//             |   GUI   |   RET   |   SPC/SYMBOLS   |   |  SPC/NUMBERS    |   RSE    |   TAB   |
                &kp LGUI   &kp RET  &mt SYMBOLS SPACE     &mt NUMBERS SPACE &kp LSHIFT  &kp TAB
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
// | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |
// |     |     |     |     |     |   |     |     |     |     |     |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans
   &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans
                                    &kp LGUI     &trans       &kp trans      &kp trans  &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |
// |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR
   &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH
   &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
